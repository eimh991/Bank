<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbRegHide.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAHYbAAB2GwH1ht6VAAACcUlE
        QVRYR+2WzUtUYRSHp6wWWduQNDMjKG0p0srITRKUtXNpVBSEhGAE4lKUKOhT0j4FizZ9QBZRiz6JIvsP
        8t9wbc8zzQvjde69M6PMXegPHpj7zn3Pufecc895c+taS9oAG///zEYn4Rz4IDXXKZiD3vxVjRWcG4FV
        UR1sgyZoKeBv1/yvWKvi3Jw1wHEYg+fwEb4V+A5f4QM8g1HogT74Ce6rSpvgEFwHneh0HE5DNxyAEIH9
        cAT64SrMwwL4gB0QjUyqDsIU/IEbcBi2Qzmy0Nw3ANfgN0xCO6RqK1wE83YL3BT37W4Bc98Im11A0Zy7
        Vxu3wXVt66OkNPQEPsFRSApbF1gLpkYew2Uw56UKTlvWhbXivfpaon3wFh7Bsj8j0vkvuAJtYC28gEUY
        hCQ1gy85C60uqL3wHgx5Wp4NtW+u86ATYBRew0OweJOkj7vgC+s7X6kTUO9Fisy5zkJBhZz7EK5pKy2C
        yp5xD7w/n3MvXEyTxt2kM50WF5xrPlwlD6DvfC7egWFJS4HhtYhegc58iKBhML/lpuAN7HFBmQsXZmCX
        CwkaAgvuJViAFqLOf4CNK0m74SkscR60E+7DFzgGpT5Dc+6nZrVbcEZBpiHJuba06b0PQF8lZZM4D3Yv
        C9OOGBpRtMn4RZhvCY0oKvdq4w5o8wLENqJiGVY32VJvwqXC73LnuXl2NvgSOtaWNiuSYeuEz+Bg+Qu2
        1LMQN4zOgPeEaenwchilFWasrHJz7mi1PY+AI9fRq4NQA2EcW2De4wjeASs6fsUdJoyMTaucA0nVinNe
        E+k0M+fKo3Mmp9cgv91Mzu7rykC53D/jZ3vnnfCTdQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbRegShow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAAVFJREFUWEft1btKA0EYhuE0ooIKYukliK2dleAVeAeKYCMIaieKgmLlEfUqPBWC
        eBW2lgpiIwpq4dn3DVmYLBuzSbYJzAcP7OzO/NmZ3cmWYmJiYtotPZjEKW7xiY/K8Tlm0I/C04FFPOK3
        jldsog+FZAjXCH/kBKPoqvDYc2GfO4yhpUzAGYWF51ErXgv7fmEBTWUO3wgLOkvTiV1cllvVSa+EttBQ
        lvGDdCGX2uzA9lm5VR37pMdpG7mygqwC8nmbJ9h+w7AngtgnPS6xhLpZQ9ZgJTfwjOScN+G2vID57wb2
        kSsbyCqQPAILpa/twdR6BMn13FlFusgxjLM8hDvkBQfwxTT2Ccf4Lq2jqczCrRQWbGQbvmMaLWUcDwgL
        O0uX2pWQx+mZ32AEhWQAR3BG4Y9kcYf4tnej8AzCb8IV7hF+jPwDmkIvYmJiYtolpdIfEC6jlzlmgZcA
        AAAASUVORK5CYII=
</value>
  </data>
</root>